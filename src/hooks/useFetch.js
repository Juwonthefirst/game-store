import { useState, useEffect } from "react";const useFetch = (url) => {	const [response, setResponse] = useState({		data: null,		error: null,		isLoading: true,	});	useEffect(() => {		const controller = new AbortController();		const signal = controller.signal;		(async () => {			try {				const response = await fetch(url, { signal });				const data = await response.json();				if (response.status >= 400)					throw new Error(JSON.stringify(data));				else setResponse((response) => ({...response, isLoading: false, data}));			} catch (error) {				setResponse((response) => ({...response, isLoading: false, error: error.message }));			}		})();		return () => {			controller.abort();		};	}, [url]);	return response;};export { useFetch };